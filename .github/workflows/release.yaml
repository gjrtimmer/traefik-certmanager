# .github/workflows/release.yml
---
name: release

on:
  push:
    tags:
      - '*.*.*'

permissions:
  contents: write    # to push commits/tags if needed
  actions: write     # to create the GitHub Release

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse version & changelog
        id: release_info
        shell: bash
        run: |
          # extract the version from the tag
          version="${GITHUB_REF#refs/tags/}"
      
          # extract changelog section
          in_section=false
          changelog=""
          while IFS= read -r line; do
            if $in_section && [[ "$line" =~ ^##[[:space:]] ]]; then
              break
            fi
            if [[ "$line" =~ ^##[[:space:]] ]]; then
              in_section=true
              continue
            fi
            if $in_section; then
              changelog+="${line}\n"
            fi
          done < CHANGELOG.md
      
          # write the real unescaped changelog to file
          printf "%b" "$changelog" > RELEASE.md
      
          # only output the version (no need for changelog anymore)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Set Chart Release Info
        shell: bash
        run: |
          # Copy Release Info for Chart Release Info
          cp RELEASE.md charts/traefik-certmanager/RELEASE.md

      # - name: Create GitHub Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name:     ${{ github.ref_name }}
      #     release_name: ${{ steps.release_info.outputs.version }}
      #     body_path:    RELEASE.md
      #     draft:        false
      #     prerelease:   false

      - name: Configure Git
        run: |
          git config user.name "G.J.R. Timmer"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Delete Tag for Chart Release
        run: |
          git push --delete origin tagname
          git tag --delete tagname

      - name: Override Chart Releaser Commit Message
        run: |
          mkdir -p .git/hooks
          cat > .git/hooks/commit-msg <<-EOF
            #!/bin/bash
            # Overwrite commit message with release and injected version
            echo "chart: ${{ steps.release_info.outputs.version }}" > "\$1"
          EOF
          chmod +x .git/hooks/commit-msg

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
